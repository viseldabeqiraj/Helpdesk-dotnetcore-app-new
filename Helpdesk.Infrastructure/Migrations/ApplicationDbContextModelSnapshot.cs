// <auto-generated />
using System;
using Helpdesk.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Helpdesk.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone_Nr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.CommunicationChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommunicationChannelValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommunicationChannel");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CommunicationChannelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Completion_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Current_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Document_Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Document_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Reception_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsibleId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CommunicationChannelId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("RequestTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestType");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Response_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Response_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("Response");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paternity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Request", b =>
                {
                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.Client", "Client")
                        .WithMany("Request")
                        .HasForeignKey("ClientId");

                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.CommunicationChannel", "CommunicationChannel")
                        .WithMany("Requests")
                        .HasForeignKey("CommunicationChannelId");

                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.Program", "Program")
                        .WithMany("Requests")
                        .HasForeignKey("ProgramId");

                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.RequestType", "RequestType")
                        .WithMany("Requests")
                        .HasForeignKey("RequestTypeId");

                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.User", null)
                        .WithMany("Requests")
                        .HasForeignKey("UserId");

                    b.Navigation("Client");

                    b.Navigation("CommunicationChannel");

                    b.Navigation("Program");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Response", b =>
                {
                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.Request", "Request")
                        .WithMany("Response")
                        .HasForeignKey("RequestId");

                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.User", "User")
                        .WithMany("Responses")
                        .HasForeignKey("UserId");

                    b.Navigation("Request");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.User", b =>
                {
                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.UserRole", b =>
                {
                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("Helpdesk.Infrastructure.Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Client", b =>
                {
                    b.Navigation("Request");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.CommunicationChannel", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Program", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Request", b =>
                {
                    b.Navigation("Response");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.RequestType", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Helpdesk.Infrastructure.Data.Entities.User", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("Responses");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
